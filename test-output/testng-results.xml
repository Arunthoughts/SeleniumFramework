<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-26T08:15:26Z" name="Suite" finished-at="2024-03-26T08:16:21Z" duration-ms="54842">
    <groups>
      <group name="Purchase">
        <method signature="EndToEndTest.placeOrder(java.util.HashMap)[pri:0, instance:mylearnings.tests.EndToEndTest@1722011b]" name="placeOrder" class="mylearnings.tests.EndToEndTest"/>
      </group> <!-- Purchase -->
      <group name="ErrorHandling">
        <method signature="ErrorValidationTest.loginErrorValidationTest()[pri:0, instance:mylearnings.tests.ErrorValidationTest@7d3d101b]" name="loginErrorValidationTest" class="mylearnings.tests.ErrorValidationTest"/>
      </group> <!-- ErrorHandling -->
    </groups>
    <test started-at="2024-03-26T08:15:26Z" name="EndtoEndTest" finished-at="2024-03-26T08:16:04Z" duration-ms="38562">
      <class name="mylearnings.tests.EndToEndTest">
        <test-method is-config="true" signature="launchApplicationPage()[pri:0, instance:mylearnings.tests.EndToEndTest@1722011b]" started-at="2024-03-26T13:45:26Z" name="launchApplicationPage" finished-at="2024-03-26T13:45:33Z" duration-ms="7409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplicationPage -->
        <test-method signature="placeOrder(java.util.HashMap)[pri:0, instance:mylearnings.tests.EndToEndTest@1722011b]" started-at="2024-03-26T13:45:33Z" name="placeOrder" data-provider="testData" finished-at="2024-03-26T13:45:38Z" duration-ms="4469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{userNameToBeEntered=Arunkumar@gmail.com, passwordToBeEntered=Arun@1234, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrder -->
        <test-method is-config="true" signature="closeApplication()[pri:0, instance:mylearnings.tests.EndToEndTest@1722011b]" started-at="2024-03-26T13:45:38Z" name="closeApplication" finished-at="2024-03-26T13:45:38Z" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
        <test-method is-config="true" signature="launchApplicationPage()[pri:0, instance:mylearnings.tests.EndToEndTest@1722011b]" started-at="2024-03-26T13:45:38Z" name="launchApplicationPage" finished-at="2024-03-26T13:45:44Z" duration-ms="5584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplicationPage -->
        <test-method signature="placeOrder(java.util.HashMap)[pri:0, instance:mylearnings.tests.EndToEndTest@1722011b]" started-at="2024-03-26T13:45:44Z" name="placeOrder" data-provider="testData" finished-at="2024-03-26T13:45:48Z" duration-ms="4697" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{userNameToBeEntered=anshika@gmail.com, passwordToBeEntered=Iamking@000, productName=IPHONE 13 PRO}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrder -->
        <test-method is-config="true" signature="closeApplication()[pri:0, instance:mylearnings.tests.EndToEndTest@1722011b]" started-at="2024-03-26T13:45:48Z" name="closeApplication" finished-at="2024-03-26T13:45:49Z" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
        <test-method is-config="true" signature="launchApplicationPage()[pri:0, instance:mylearnings.tests.EndToEndTest@1722011b]" started-at="2024-03-26T13:45:49Z" name="launchApplicationPage" finished-at="2024-03-26T13:45:56Z" duration-ms="6966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplicationPage -->
        <test-method signature="verifyOrderedProduct(java.util.HashMap)[pri:0, instance:mylearnings.tests.EndToEndTest@1722011b]" started-at="2024-03-26T13:45:56Z" name="verifyOrderedProduct" data-provider="testData" finished-at="2024-03-26T13:45:57Z" depends-on-methods="mylearnings.tests.EndToEndTest.placeOrder" duration-ms="1521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{userNameToBeEntered=Arunkumar@gmail.com, passwordToBeEntered=Arun@1234, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderedProduct -->
        <test-method is-config="true" signature="closeApplication()[pri:0, instance:mylearnings.tests.EndToEndTest@1722011b]" started-at="2024-03-26T13:45:57Z" name="closeApplication" finished-at="2024-03-26T13:45:57Z" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
        <test-method is-config="true" signature="launchApplicationPage()[pri:0, instance:mylearnings.tests.EndToEndTest@1722011b]" started-at="2024-03-26T13:45:57Z" name="launchApplicationPage" finished-at="2024-03-26T13:46:03Z" duration-ms="5381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplicationPage -->
        <test-method signature="verifyOrderedProduct(java.util.HashMap)[pri:0, instance:mylearnings.tests.EndToEndTest@1722011b]" started-at="2024-03-26T13:46:03Z" name="verifyOrderedProduct" data-provider="testData" finished-at="2024-03-26T13:46:04Z" depends-on-methods="mylearnings.tests.EndToEndTest.placeOrder" duration-ms="1586" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{userNameToBeEntered=anshika@gmail.com, passwordToBeEntered=Iamking@000, productName=IPHONE 13 PRO}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderedProduct -->
        <test-method is-config="true" signature="closeApplication()[pri:0, instance:mylearnings.tests.EndToEndTest@1722011b]" started-at="2024-03-26T13:46:04Z" name="closeApplication" finished-at="2024-03-26T13:46:04Z" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
      </class> <!-- mylearnings.tests.EndToEndTest -->
    </test> <!-- EndtoEndTest -->
    <test started-at="2024-03-26T08:16:05Z" name="ErrorValidations" finished-at="2024-03-26T08:16:21Z" duration-ms="15921">
      <class name="mylearnings.tests.ErrorValidationTest">
        <test-method is-config="true" signature="launchApplicationPage()[pri:0, instance:mylearnings.tests.ErrorValidationTest@7d3d101b]" started-at="2024-03-26T13:46:05Z" name="launchApplicationPage" finished-at="2024-03-26T13:46:12Z" duration-ms="7388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplicationPage -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:mylearnings.tests.ErrorValidationTest@7d3d101b]" started-at="2024-03-26T13:46:12Z" name="ProductErrorValidation" finished-at="2024-03-26T13:46:13Z" duration-ms="1137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="closeApplication()[pri:0, instance:mylearnings.tests.ErrorValidationTest@7d3d101b]" started-at="2024-03-26T13:46:13Z" name="closeApplication" finished-at="2024-03-26T13:46:14Z" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
        <test-method is-config="true" signature="launchApplicationPage()[pri:0, instance:mylearnings.tests.ErrorValidationTest@7d3d101b]" started-at="2024-03-26T13:46:14Z" name="launchApplicationPage" finished-at="2024-03-26T13:46:19Z" duration-ms="5749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplicationPage -->
        <test-method signature="loginErrorValidationTest()[pri:0, instance:mylearnings.tests.ErrorValidationTest@7d3d101b]" started-at="2024-03-26T13:46:19Z" name="loginErrorValidationTest" finished-at="2024-03-26T13:46:20Z" duration-ms="821" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect password.] but found [Incorrect email or password.]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at mylearnings.tests.ErrorValidationTest.loginErrorValidationTest(ErrorValidationTest.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidationTest -->
        <test-method is-config="true" signature="closeApplication()[pri:0, instance:mylearnings.tests.ErrorValidationTest@7d3d101b]" started-at="2024-03-26T13:46:21Z" name="closeApplication" finished-at="2024-03-26T13:46:21Z" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
      </class> <!-- mylearnings.tests.ErrorValidationTest -->
    </test> <!-- ErrorValidations -->
  </suite> <!-- Suite -->
</testng-results>
